{
  "name": "grunt-strapdown",
  "description": "Compile markdown into html using strapdown.js.",
  "version": "1.0.0",
  "homepage": "https://github.com/cxyokk/grunt-strapdown",
  "author": {
    "name": "Andrew Chen",
    "email": "cxyokk@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cxyokk/grunt-strapdown"
  },
  "bugs": {
    "url": "https://github.com/cxyokk/grunt-strapdown/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/cxyokk/grunt-strapdown/blob/master/LICENSE"
    }
  ],
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha -R spec --compilers coffee:coffee-script test/strapdown-test.coffee"
  },
  "keywords": [
    "gruntplugin",
    "markdown",
    "strapdown"
  ],
  "devDependencies": {
    "grunt": "~0.4.0",
    "chai": "~1.6.0",
    "coffee-script": "~1.6.2",
    "mocha": "~1.10.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "dependencies": {
    "lodash": "~0.9.2"
  },
  "readmeFilename": "README.md",
  "readme": "# grunt-strapdown\n\n> grunt task for strapdown.js\n\n## What Is This\nThis [grunt](http://gruntjs.com/) task does a very stupid thing: it takes a set of markdown files and **inserts** each of them into a html template, where [strapdown.js][strapdown.github] takes care of all the rest (the parsing and the styling).\n\nFor example, this markdown file `xxx.md`:\n```markdown\n# I Am So Hungry\nI am so hungry i can eat an elephant.\n```\nwill be converted into a `xxx.html`:\n```html\n<!DOCTYPE html>\n<html>\n<title>a</title>\n<body>\n<xmp theme=\"cyborg\" style=\"display:none;\">\n# I Am So Hungry\nI am so hungry i can eat an elephant.\n</xmp>\n<script src=\"http://strapdownjs.com/v/0.2/strapdown.js\"></script>\n</body>\n</html>\n```\n*(Something looks different about that `</xmp>` closing tag, see FAQ below.)*\n\nDrop this `xxx.html` into any static web server and open it from the browser, and [strapdown.js][strapdown.github] will parse and style the markdown text for you.\n\n## Usage\nInstall this plugin:\n```shell\nnpm install --save-dev grunt-markdown\n```\n\nThen enable it in your gruntfile, e.g.:\n```coffeescript\n# example gruntfile in coffeescript:\nmodule.exports = (grunt)->\n  grunt.initConfig\n    strapdown:\n      default:\n        src: ['path/to/*.md']\n        dest: 'output_dir'\n      change_theme:\n        src: ['path/to/*.md']\n        dest: 'output_dir'\n        theme: 'slate'\n      custom_template:\n        src: ['path/to/*.md']\n        dest: 'output_dir'\n        options:\n          template: 'path/to/your/template.html'\n          templateData:\n            charset: 'utf8'\n            version: '1.0'\n            whatever: 'you want'\n\n  grunt.loadNpmTasks 'grunt-strapdown'\n```\n\nYou can then run this task with `grunt strapdown`.\n\n### Options\nFollow the example gruntfile above, these are the options that the `strapdown` task accepts:\n\n* `src`: required, pattern(s) to match markdown files.\n* `dest`: required, the **directory** where generated html files will be stored in.\n* `theme`: optional, defaults to 'cyborg'. See [here](https://github.com/arturadib/strapdown/tree/gh-pages/v/0.2/themes) for strapdown's bulitin themes and see [bootswatch][bootswatch] for more.\n* `options.template`: optional, path to html template. Copy and modify grunt-strapdown's default template from [here][default-template] to make your own template.\n* `options.templateData`: optional, data to be passed into the template. We use [lodash.template()][lodash.template].\n\n## FAQ\n1.  **So what my markdown file didn't get parsed, it's just inserted right into the middle of a html template?**\n\n    Yes.\n\n2.  **And then when I open the html from the browser, that `<script src=\"http://strapdownjs.com/v/0.2/strapdown.js\">` tag is gonna get downloaded, and it's gonna do the parsing and styling for me?**\n\n    Yes.\n\n3.  **So i have to download a js file from somewhere else, that sounds weird and slow, why can't i just host that js file on my own server?**\n\n    You can, but it's a little bit more complicated, **because strapdown.js is not just *a* js file**. In order to parse and style the markdown text, this js file will dynamiclly load some other js/css files from [strapdownjs.com][strapdown.com]. So you can't just host that single js file, you need to host all those other js/css files on your server, i.e. you need to clone this repo [github.com/arturadib/strapdown][strapdown.github].\n\n    *(Use the `template` option to do this.)*\n\n4.  **Oh, what about that `</xmp>` tag in the example? The 'x' looks different.**\n\n    It's not the letter 'x', it's the multiplication sign 'Ã—'([wiki](http://en.wikipedia.org/wiki/Multiplication_sign)). Quote from [strapdown.js][strapdown.github]:\n\n      > Limitations:\n\n      > It's an unlikely scenario, but since Strapdown uses the `<xmp>` tag to wrap your Markdown (so that users don't have to escape special HTML characters), your text can't contain the string `</xmp>`.\n\n    That's why the 'x's in `</xmp>`s are replaced by grunt-strapdown before the insertion into html.\n\n5.  **So i read your test code, it's even longer than your task code, why do that?**\n\n    I don't know why.\n\n6.  **What's your favorite number?**\n\n    42.\n\n## License\nMIT license, see [LICENSE](LICENSE).\n\n\n[strapdown.com]: http://strapdownjs.com\n[strapdown.github]: https://github.com/arturadib/strapdown\n[bootswatch]: https://github.com/thomaspark/bootswatch/\n[default-template]: https://github.com/cxyokk/grunt-strapdown/blob/master/tasks/template.html\n[lodash.template]: http://lodash.com/docs#template\n",
  "_id": "grunt-strapdown@1.0.0",
  "_from": "grunt-strapdown@~1.0.0"
}
